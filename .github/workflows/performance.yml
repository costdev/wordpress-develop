name: Performance Tests

on:
  workflow_dispatch:

# Disable permissions for all available scopes by default.
# Any needed permissions should be configured at the job level.
permissions: {}

env:
  # Performance testing should be performed in an environment reflecting a standard production environment.
  WP_DEBUG: false
  SCRIPT_DEBUG: false
  SAVEQUERIES : false
  WP_DEVELOPMENT_MODE: ''

  # This workflow takes two sets of measurements â€” one for the current commit,
  # and another against a consistent version that is used as a baseline measurement.
  # This is done to isolate variance in measurements caused by the GitHub runners
  # from differences caused by code changes between commits. The BASE_TAG value here
  # represents the version being used for baseline measurements. It should only be
  # changed if we want to normalize results against a different baseline.
  BASE_TAG: '6.1.1'
  LOCAL_DIR: build

jobs:
  # Runs the performance test suite.
  #
  # Performs the following steps:
  # - Configure environment variables.
  # - Checkout repository.
  # - Set up Node.js.
  # - Log debug information.
  # - Install npm dependencies.
  # - Build WordPress.
  # - Start Docker environment.
  # - Log running Docker containers.
  # - Docker debug information.
  # - Install WordPress.
  # - Install WordPress Importer plugin.
  # - Import mock data.
  # - Update permalink structure.
  # - Install MU plugin.
  # - Run performance tests (current commit).
  # - Print performance tests results.
  # - Set the environment to the baseline version.
  # - Run baseline performance tests.
  # - Print base line performance tests results.
  # - Set the base sha.
  # - Set commit details.
  # - Publish performance results.
  # - Ensure version-controlled files are not modified or deleted.
  # - Dispatch workflow run.
  performance:
    name: Run performance tests
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Configure environment variables
        run: |
          echo "PHP_FPM_UID=$(id -u)" >> $GITHUB_ENV
          echo "PHP_FPM_GID=$(id -g)" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2

      - name: Set up Node.js
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version-file: '.nvmrc'
          cache: npm

      - name: Log debug information
        run: |
          npm --version
          node --version
          curl --version
          git --version
          svn --version
          locale -a

      - name: Install npm dependencies
        run: npm ci

      - name: Build WordPress
        run: npm run build

      - name: Start Docker environment
        run: |
          npm run env:start

      - name: Log running Docker containers
        run: docker ps -a

      - name: Docker debug information
        run: |
          docker -v
          docker-compose -v
          docker-compose run --rm mysql mysql --version
          docker-compose run --rm php php --version
          docker-compose run --rm php php -m
          docker-compose run --rm php php -i
          docker-compose run --rm php locale -a

      - name: Install WordPress
        run: npm run env:install

      - name: Install WordPress Importer plugin
        run: npm run env:cli -- plugin install wordpress-importer --activate --path=/var/www/${{ env.LOCAL_DIR }}

      - name: Import mock data
        run: |
          curl -O https://raw.githubusercontent.com/WordPress/theme-test-data/b9752e0533a5acbb876951a8cbb5bcc69a56474c/themeunittestdata.wordpress.xml
          npm run env:cli -- import themeunittestdata.wordpress.xml --authors=create --path=/var/www/${{ env.LOCAL_DIR }}
          rm themeunittestdata.wordpress.xml

      - name: Update permalink structure
        run: |
          npm run env:cli -- rewrite structure '/%year%/%monthnum%/%postname%/' --path=/var/www/${{ env.LOCAL_DIR }}

      - name: Install MU plugin
        run: |
          mkdir ./${{ env.LOCAL_DIR }}/wp-content/mu-plugins
          cp ./tests/performance/wp-content/mu-plugins/server-timing.php ./${{ env.LOCAL_DIR }}/wp-content/mu-plugins/server-timing.php

      - name: Run performance tests (current commit)
        run: npm run test:performance

      - name: Print performance tests results
        run: "node ./tests/performance/results.js"

      - name: Set the environment to the baseline version
        run: |
          npm run env:cli -- core update --version=${{ env.BASE_TAG }} --force --path=/var/www/${{ env.LOCAL_DIR }}
          npm run env:cli -- core version --path=/var/www/${{ env.LOCAL_DIR }}

      - name: Run baseline performance tests
        run: npm run test:performance -- --prefix=base

      - name: Print base line performance tests results
        run: "node ./tests/performance/results.js --prefix=base"

      - name: Archive debug artifacts (screenshots, HTML snapshots)
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        if: always()
        with:
            name: failures-artifacts
            path: artifacts
            if-no-files-found: ignore

      - name: Ensure version-controlled files are not modified or deleted
        run: git diff --exit-code
